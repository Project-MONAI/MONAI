{
    "imports": [
        "$from collections import defaultdict"
    ],
    "bundle_root": "will override",
    "device": "$torch.device('cpu')",
    "network_def": {
        "_target_": "UNet",
        "spatial_dims": 3,
        "in_channels": 1,
        "out_channels": 2,
        "channels": [
            2,
            2,
            4,
            8,
            4
        ],
        "strides": [
            2,
            2,
            2,
            2
        ],
        "num_res_units": 2,
        "norm": "batch"
    },
    "network": "$@network_def.to(@device)",
    "dataflow": "$defaultdict()",
    "preprocessing": {
        "_target_": "Compose",
        "transforms": [
            {
                "_target_": "EnsureChannelFirstd",
                "keys": "image"
            },
            {
                "_target_": "ScaleIntensityd",
                "keys": "image"
            },
            {
                "_target_": "RandRotated",
                "_disabled_": true,
                "keys": "image"
            }
        ]
    },
    "dataset": {
        "_target_": "Dataset",
        "data": [
            "@dataflow"
        ],
        "transform": "@preprocessing"
    },
    "dataloader": {
        "_target_": "DataLoader",
        "dataset": "@dataset",
        "batch_size": 1,
        "shuffle": false,
        "num_workers": 0
    },
    "inferer": {
        "_target_": "SlidingWindowInferer",
        "roi_size": [
            64,
            64,
            32
        ],
        "sw_batch_size": 4,
        "overlap": 0.25
    },
    "postprocessing": {
        "_target_": "Compose",
        "transforms": [
            {
                "_target_": "Activationsd",
                "keys": "pred",
                "softmax": true
            },
            {
                "_target_": "AsDiscreted",
                "keys": "pred",
                "argmax": true
            }
        ]
    },
    "evaluator": {
        "_target_": "SupervisedEvaluator",
        "device": "@device",
        "val_data_loader": "@dataloader",
        "network": "@network",
        "inferer": "@inferer",
        "postprocessing": "@postprocessing",
        "amp": false,
        "epoch_length": 1
    },
    "run": [
        "$@evaluator.run()",
        "$@dataflow.update(@evaluator.state.output[0])"
    ]
}
